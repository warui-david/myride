<?php

namespace api\controllers;

use api\models\Countries;
use yii\rest\ActiveController;
use app\helpers\BehaviorsFromParamsHelper;
use api\models\Profile;
use api\models\SignupForm;
use api\models\Bookings;
use api\models\Driver;
use api\models\Passenger;
use common\models\LoginForm;
use yii\filters\auth\CompositeAuth;
use yii\filters\auth\HttpBasicAuth;
use yii\filters\auth\HttpBearerAuth;
use yii\filters\auth\QueryParamAuth;
use common\models\User;
use yii;


class ApiController extends ActiveController
{

    public $enableCsrfValidation = false;

    /**
     * @param $action
     * @return bool
     * @throws yii\web\BadRequestHttpException
     */
    public function beforeAction($action)
    {
        $this->enableCsrfValidation = false;
        parent::beforeAction($action);

        return true;
    }

    public static function allowedDomains()
    {
        return [
            '*',                        // star allows all domains
        ];
    }

    // public function behaviors()
    // {
    //     $behaviors = parent::behaviors();
    //     $behaviors['authenticator'] = [
    //         'class' => CompositeAuth::className(),
    //         'authMethods' => [
    //             HttpBasicAuth::className(),
    //             HttpBearerAuth::className(),
    //             QueryParamAuth::className(),
    //         ],
    //     ];
    //     $behaviors['corsFilter'] = [
    //         'class' => \yii\filters\Cors::className(),
    //     ];
    //     return $behaviors;
    // }

    public $modelClass = 'common\models\User';


    public function actions()
    {
        $action = parent::actions(); // TODO: Change the autogenerated stub
        unset($action['index']);
        unset($action['create']);
        unset($action['update']);
        unset($action['delete']);
    }

    public function actionTest()
    {
        return "Success";
    }

    public function actionCountries()
    {
        $countries = Countries::find()->asArray()->all();

        return ["countries" => $countries];
    }

    public function actionProfile()
    {

        $postdata = file_get_contents("php://input");
        $data = json_decode($postdata, true);

        $model = new Profile();

        $data = ['Profile' => [
            'name' => $data['name'],
            'countryId' => $data['countryId'],
            'phoneNumber' => $data['phoneNumber'],
            'lastname' => $data['lastname']
        ]];


        if ($model->load($data) &&  $model->save()) {
            return $model;
        }
        return $model;
    }

    public function actionRegister()
    {

        $postdata = file_get_contents("php://input");
        $data = json_decode($postdata, true);

        $model = new SignupForm();

        $data = ['SignupForm' => [
            'username' => $data['username'], 'password' => $data['password'],
            'email' => $data['email']
        ]];

        if ($model->load($data) &&  $model->signup()) {
            return $model;
        }
        return $model;
    }

    public function actionLogin()
    {

        $postdata = file_get_contents("php://input");
        $data = json_decode($postdata, true);

        $model = new LoginForm();

        $data = ['LoginForm' => [
            'username' => $data['username'], 'password' => $data['password'],
        ]];

        if ($model->load($data) &&  $model->login()) {
            return $model;
        }
        return $model;
    }

    public function actionBookings()
    {

        $postdata = file_get_contents("php://input");
        $data = json_decode($postdata, true);

        $model = new Bookings();

        $data = ['Bookings' => [
            'bookingId' => $data['bookingId'],
            'userId' => $data['userId'],
            'amount' => $data['amount'],
            'pickupLocation' => $data['pickupLocation']
        ]];
        // var_dump($data);


        if ($model->load($data) &&  $model->save()) {
            return $model;
            // var_dump($model);
        }
        return $model;
    }

    public function actionPassengerplace()
    {

        $postdata = file_get_contents("php://input");
        $data = json_decode($postdata, true);

        $model = new Passenger();

        $data = ['Passenger' => [
            'passengerId' => $data['passengerId'],
            'userId' => $data['userId'],
            'profileId' => $data['profileId'],
            'bookingId' => $data['bookingId'],
            'date' => $data['date'],
            'pickup' => $data['pickup'],
            'destination' => $data['destination']
        ]];


        if ($model->load($data) &&  $model->save()) {
            return $model;
        }
        return $model;
    }

    public function actionDriverrbook()
    {

        $postdata = file_get_contents("php://input");
        $data = json_decode($postdata, true);

        $model = new Driver();

        $data = ['Driver' => [
            'driverId' => $data['driverId'],
            'userId' => $data['userId'],
            'carId' => $data['carId'],
            'bookingId' => $data['bookingId'],
            'route' => $data['route'],
            'destination' => $data['destination'],
            'profileId' => $data['profileId'],
            'pickup' => $data['pickup']
        ]];


        if ($model->load($data) &&  $model->save()) {
            return $model;
        }
        return $model;
    }


    public function actionDriverlist()
    {
        $postdata = file_get_contents("php://input");
        $data = json_decode($postdata, true);
        $driver = Driver::find()->asArray()->all();
        return [
            'driver' => $driver,
        ];
    }

    //     public function actionAddtocart($productid,$userid,$quantity)
    //     {
    //         $checkcart = Productcart::find()->where(['userId'=>$userid])->andWhere(['cartStatus'=>'Active'])->asArray()->one();
    //         if(empty($checkcart)){
    //             if($this->createCart($userid,$productid,$quantity)){
    //                 return json_encode('true');
    //             }

    //         }else {
    //             $this->createCartItems($checkcart['cartId'],$productid,$quantity);
    //         }

    //     }

    // public function createCart($userid,$productid,$quantity){
    //     $model = New Productcart();
    //     $data = ['Productcart'=>['userId'=>$userid,'total'=>0,'cartStatus'=>'Active','createdBy'=>yii::$app->user->id]];
    //     if($model->load($data) && $model->save()){
    //         $this->createCartItems($model->cartId,$productid,$quantity);
    //     }
    //     return false;
    // }


}
